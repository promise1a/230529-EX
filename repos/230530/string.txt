helloworld 입력
ch[0]=h
ch[1]=e
....
ch[8]=l
ch[9]=d

alpha[26]

//

alpha[26] = {0}; :: 모두 값 0으로 초기화

i=0
alpha[ch[0]-'a']++;
:: 'h'-'a'=8-1=7 alpha[7]++;
:: alpha[7] = 0+1 = 1

//

alpha[ch[i]-'a']]

[ch[i]-'a'] = X
i가 a면 0 (a-a=0)
i가 b면 1 (b-a=1)
...
[i]-'a'값을 a부터의 간격?으로 간주해도됨.
alpha[X]
:: 수열alpha, a=0, b=1 ...


a,b,c,d,e,f,g,h
a부터 0을 대응시키면,
h가 7에 대응이 됨.

수열 alpha에 [7]숫자는
알파벳 h에 대응이 됨.

i=1
alpha[ch[1]-'a']++;
:: 'e'-'a'-= 5-1 = 4 alpha[4]++;
:: alpha[4] = 0+1 = 1
...

i=2
alpha[ch[2]-'a']++;
:: 'l'-'a' = 108 - 97 =11 alpha[11]++;
:: alpha[11] = 0+1 = 1

i=3
alpha[ch[2]-'a']++;
:: 'l'-'a' = 108 - 97 =11 alpha[11]++;
:: alpha[11] = 1+1 = 2

i=9
alpha[ch[9]-'a']++;
:: 'd'-'a'=4-1=3 alpha[3]++;
:: alpha[3] = 0+1 = 1

i=10
ch[10] = \0, 반복문 탈출

///

 alpha[27](공백포함) : {0,0,0,0,0 .... , 0,0}

 i=0일때 왜 a의 값이 나왔는가?
 a가 몇개인지?


alpha[4] = 1
alpha[5] = 1
alpha[8] = 1
alpha[12] = 3
alpha[15] = 2
alpha[18] = 1
alpha[23] = 1

/// 

printf
i=0
a : (=alpha[0])개 출현

// 주석 필요
....
i=3
d : (=alpha[3)]개 출현